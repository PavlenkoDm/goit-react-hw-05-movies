{"version":3,"file":"static/js/681.7b0ba1f8.chunk.js","mappings":"8MAGO,SAAeA,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACoBC,EAAAA,EAAAA,IAAUD,GAD9B,cACGE,EADH,yBAEIA,EAASC,MAFb,kE,uFCqDP,UAnDgB,WACZ,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KA4BA,OA1BAC,EAAAA,EAAAA,YAAU,WACDL,IACLM,EAAAA,QAAAA,UACAX,EAAAA,EAAAA,GAAiB,sCAAD,OAC0BK,EAD1B,4EAGXO,MAAK,SAAAT,GACF,GAAgC,IAA5BA,EAASU,QAAQC,OAArB,CAIA,IACMC,EADcZ,EAAZU,QACmBG,KAAI,SAAAC,GAE3B,MAAO,CACHC,OAF4BD,EAAxBC,OAGJC,GAH4BF,EAAhBE,GAIZC,QAJ4BH,EAAZG,QAMvB,IACDX,EAAWM,EAVV,MAFGM,QAAQC,IAAI,oBAanB,IACAC,OAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,EAAhB,IACXC,QAAQd,EAAAA,QAAAA,QAChB,GAAE,CAACN,KAGA,8BACwB,IAAnBG,EAAQM,QACL,qEAEA,wBACKN,EAAQQ,KAAI,SAAAU,GACT,IAAQR,EAAwBQ,EAAxBR,OAAQC,EAAgBO,EAAhBP,GAAIC,EAAYM,EAAZN,QACpB,OACI,2BACI,qCAAaF,MACb,uBAAIE,MAFCD,EAKhB,OAKpB,C","sources":["api/api.js","components/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\n\nexport async function getImagesFromApi(urlOptions) {\n    const response = await axios.get(urlOptions);\n    return response.data;\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getImagesFromApi } from 'api/api';\nimport { Loading } from 'notiflix';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        if (!movieId) return;\n        Loading.arrows();\n        getImagesFromApi(\n            `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=854977f2e9fa8d2e098b4e957b2e6d0a&language=en-US&page=1`\n        )\n            .then(response => {\n                if (response.results.length === 0) {\n                    console.log('No reviews yet...');\n                    return;\n                }\n                const { results } = response;\n                const reviewInfo = results.map(result => {\n                    const { author, id, content } = result;\n                    return {\n                        author,\n                        id,\n                        content,\n                    };\n                });\n                setReviews(reviewInfo);\n            })\n            .catch(error => console.log(error))\n            .finally(Loading.remove);\n    }, [movieId]);\n\n    return (\n        <>\n            {reviews.length === 0 ? (\n                <p>We don't have any reviews for this movie</p>\n            ) : (\n                <ul>\n                    {reviews.map(review => {\n                        const { author, id, content } = review;\n                        return (\n                            <li key={id}>\n                                <h3>Author: {author}</h3>\n                                <p>{content}</p>\n                            </li>\n                        );\n                    })}\n                </ul>\n            )}\n        </>\n    );\n};\n\nexport default Reviews;\n"],"names":["getImagesFromApi","urlOptions","axios","response","data","movieId","useParams","useState","reviews","setReviews","useEffect","Loading","then","results","length","reviewInfo","map","result","author","id","content","console","log","catch","error","finally","review"],"sourceRoot":""}