{"version":3,"file":"static/js/884.cedca64b.chunk.js","mappings":"8MAGO,SAAeA,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACoBC,EAAAA,EAAAA,IAAUD,GAD9B,cACGE,EADH,yBAEIA,EAASC,MAFb,kE,mKCsFP,UAlFqB,WAAO,IAAD,IACfC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,QAAM,oBAACN,EAASO,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,CAAEC,SAAU,MACtDC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACDd,IACLe,EAAAA,QAAAA,UAEApB,EAAAA,EAAAA,GAAiB,sCAAD,OAC0BK,EAD1B,6DAGXgB,MAAK,SAAAjB,GACF,GAAKA,EAAL,CAKA,IAAQkB,EAAqElB,EAArEkB,OAAQC,EAA6DnB,EAA7DmB,MAAOC,EAAsDpB,EAAtDoB,aAAcC,EAAwCrB,EAAxCqB,YAAaC,EAA2BtB,EAA3BsB,aAAcC,EAAavB,EAAbuB,SAEhEhB,EAAS,CACLiB,YAAaN,EAAOO,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,KACjDC,YAAa,IAAIC,KAAKT,GAAcU,iBACpCX,MAAAA,EACAY,OAAO,GAAD,OA5BL,uCA4BK,OAAoBV,GAC1BW,UAAWC,KAAKC,MAAqB,GAAfZ,GACtBC,SAAAA,GAVH,MAFGY,QAAQC,IAAI,yBAcnB,IACAC,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,EAAIC,QAApB,IACTC,SAAQ,WACLxB,EAAAA,QAAAA,QACH,IACR,GAAE,CAACf,IAEJ,IAAQuB,EAAiElB,EAAjEkB,YAAaI,EAAoDtB,EAApDsB,YAAaT,EAAuCb,EAAvCa,MAAOY,EAAgCzB,EAAhCyB,OAAQC,EAAwB1B,EAAxB0B,UAAWT,EAAajB,EAAbiB,SAE5D,OACI,6BACI,gCACI,mBACIkB,UAAU,WACVC,KAAK,SACLC,QAAS,kBAAM9B,EAAS,GAAD,OAAIL,EAASoC,QAAQhC,UAArB,OAAgCJ,EAASoC,QAAQC,QAA/D,EAHb,sBAOA,eAAIC,MAAO,CAAEC,QAAS,QAAtB,8BACA,qBAASN,UAAU,aAAnB,WACI,gBAAKA,UAAU,SAASO,IAAKjB,EAAQkB,IAAKzB,EAAasB,MAAO,CAAEI,MAAO,QACvE,4BACI,0BACK/B,EADL,KACcS,EADd,QAGA,wCAAgBI,EAAhB,QACA,sCACA,cAAGS,UAAU,cAAb,SAA4BlB,KAC5B,oCACA,uBAAIC,cAIhB,qBAASiB,UAAU,aAAnB,WACI,oDACA,0BACI,gBAAIA,UAAU,kBAAd,WACI,yBACI,SAAC,KAAD,CAAMU,GAAG,OAAT,qBAEJ,yBACI,SAAC,KAAD,CAAMA,GAAG,UAAT,gCAKhB,SAAC,KAAD,MAGX,C","sources":["api/api.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\n\nexport async function getImagesFromApi(urlOptions) {\n    const response = await axios.get(urlOptions);\n    return response.data;\n}\n","import { Link, useNavigate, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useState, useRef, useEffect } from 'react';\nimport { Loading } from 'notiflix';\nimport { getImagesFromApi } from 'components/index';\n\nconst baseImageURL = 'https://image.tmdb.org/t/p/original';\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const location = useLocation();\n    const [movie, setMovie] = useState({});\n    const fromLink = useRef(location.state?.from ?? { pathname: '/' });\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (!movieId) return;\n        Loading.arrows();\n\n        getImagesFromApi(\n            `https://api.themoviedb.org/3/movie/${movieId}?api_key=854977f2e9fa8d2e098b4e957b2e6d0a&language=en-US`\n        )\n            .then(data => {\n                if (!data) {\n                    console.log('Ooops something wrong!');\n                    return;\n                }\n\n                const { genres, title, release_date, poster_path, vote_average, overview } = data;\n\n                setMovie({\n                    movieGenres: genres.map(({ name }) => name).join(' '),\n                    releaseDate: new Date(release_date).getUTCFullYear(),\n                    title,\n                    imgUrl: `${baseImageURL}${poster_path}`,\n                    userScore: Math.round(vote_average * 10),\n                    overview,\n                });\n            })\n            .catch(err => console.log(err.message))\n            .finally(() => {\n                Loading.remove();\n            });\n    }, [movieId]);\n\n    const { movieGenres, releaseDate, title, imgUrl, userScore, overview } = movie;\n\n    return (\n        <main>\n            <section>\n                <button\n                    className='back-btn'\n                    type=\"button\"\n                    onClick={() => navigate(`${fromLink.current.pathname}${fromLink.current.search}`)}\n                >\n                    Go Back\n                </button>\n                <h1 style={{ display: 'none' }}>Main movie info</h1>\n                <article className='movie-info'>\n                    <img className='poster' src={imgUrl} alt={movieGenres} style={{ width: 200 }} />\n                    <div>\n                        <h2>\n                            {title} ({releaseDate})\n                        </h2>\n                        <p>User Score: {userScore}%</p>\n                        <h3>Overview</h3>\n                        <p className='description'>{overview}</p>\n                        <h3>Genres</h3>\n                        <p>{movieGenres}</p>\n                    </div>\n                </article>\n            </section>\n            <section className='additional'>\n                <h2>Additional information</h2>\n                <div>\n                    <ul className='additional_list'>\n                        <li>\n                            <Link to=\"cast\">Cast</Link>\n                        </li>\n                        <li>\n                            <Link to=\"reviews\">Rewievs</Link>\n                        </li>\n                    </ul>\n                </div>\n            </section>\n            <Outlet />\n        </main>\n    );\n};\n\nexport default MovieDetails;\n"],"names":["getImagesFromApi","urlOptions","axios","response","data","movieId","useParams","location","useLocation","useState","movie","setMovie","fromLink","useRef","state","from","pathname","navigate","useNavigate","useEffect","Loading","then","genres","title","release_date","poster_path","vote_average","overview","movieGenres","map","name","join","releaseDate","Date","getUTCFullYear","imgUrl","userScore","Math","round","console","log","catch","err","message","finally","className","type","onClick","current","search","style","display","src","alt","width","to"],"sourceRoot":""}