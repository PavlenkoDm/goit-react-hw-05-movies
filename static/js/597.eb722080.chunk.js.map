{"version":3,"file":"static/js/597.eb722080.chunk.js","mappings":"8MAGO,SAAeA,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACoBC,EAAAA,EAAAA,IAAUD,GAD9B,cACGE,EADH,yBAEIA,EAASC,MAFb,kE,uFCiDP,UA7Ca,WACT,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACDL,IACLM,EAAAA,QAAAA,UACAX,EAAAA,EAAAA,GAAiB,sCAAD,OAC0BK,EAD1B,qEAGXO,MAAK,SAAAT,GACF,IACMU,EADWV,EAATW,KACgBC,KAAI,SAAAC,GACxB,IAAQC,EAAkCD,EAAlCC,UAAWC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,aACzB,MAAO,CACHF,UAAAA,EACAC,KAAAA,EACAE,MAAM,GAAD,OAnBR,uCAmBQ,OAAoBD,GAEhC,IAEDV,EAAUI,EACb,IACAQ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQd,EAAAA,QAAAA,QAChB,GAAE,CAACN,KAGA,+BACI,wBACKG,EAAOO,KAAI,SAAAC,GACR,IAAQE,EAA2BF,EAA3BE,KAAMD,EAAqBD,EAArBC,UAAWG,EAAUJ,EAAVI,MACzB,OACI,2BACI,gBAAKM,UAAU,SAASC,IAAKP,EAAOQ,IAAKV,EAAMW,MAAO,CAAEC,MAAO,GAAIC,OAAQ,QAC3E,uBAAIb,KACJ,uCAAeD,OAHVC,EAMhB,OAIhB,C","sources":["api/api.js","components/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\n\nexport async function getImagesFromApi(urlOptions) {\n    const response = await axios.get(urlOptions);\n    return response.data;\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getImagesFromApi } from 'api/api';\nimport { Loading } from 'notiflix';\n\nconst baseImageURL = 'https://image.tmdb.org/t/p/original';\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [actors, setActors] = useState([]);\n\n    useEffect(() => {\n        if (!movieId) return;\n        Loading.arrows();\n        getImagesFromApi(\n            `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=854977f2e9fa8d2e098b4e957b2e6d0a&language=en-US`\n        )\n            .then(response => {\n                const { cast } = response;\n                const actorsInfo = cast.map(actor => {\n                    const { character, name, profile_path } = actor;\n                    return {\n                        character,\n                        name,\n                        photo: `${baseImageURL}${profile_path}`,\n                    };\n                });\n\n                setActors(actorsInfo);\n            })\n            .catch(error => console.log(error))\n            .finally(Loading.remove);\n    }, [movieId]);\n\n    return (\n        <>\n            <ul>\n                {actors.map(actor => {\n                    const { name, character, photo } = actor;\n                    return (\n                        <li key={name}>\n                            <img className='actors' src={photo} alt={name} style={{ width: 75, height: 110}} />\n                            <p>{name}</p>\n                            <p>Character: {character}</p>\n                        </li>\n                    );\n                })}\n            </ul>\n        </>\n    );\n};\n\nexport default Cast;\n"],"names":["getImagesFromApi","urlOptions","axios","response","data","movieId","useParams","useState","actors","setActors","useEffect","Loading","then","actorsInfo","cast","map","actor","character","name","profile_path","photo","catch","error","console","log","finally","className","src","alt","style","width","height"],"sourceRoot":""}